name: Maven Release Action
description: Utilized for creating releases of projects

# Inputs
inputs:
  ikmdevops_pat:
    description: "PAT TOKEN for IKMDevops User"
    required: true
  ikmdevops_email:
    description: "Email For IKMDevops User"
    default: 'devops@ikm.dev'
  github_token:
    description: "GitHub Token"
    required: true
  gpg_passphrase:
    description: "GPG Passphrase"
    required: true
  gpg_key:
    description: "GPG Key"
    required: true
  ossrh_username:
    description: "OSSRH USERNAME"
    required: true
  ossrh_token:
    description: "OSSRH Token"
    required: true
  

runs:
  using: "composite" 
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{inputs.ikmdevops_pat}}

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ inputs.gpg_key }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    # - name: Cache Maven packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2

    - name: Extract Version
      id: get_current_version
      shell: bash
      run: |
          echo "POM_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

    - name: Print Maven POM project version
      shell: bash
      run: |
        echo "version = ${{ steps.get_current_version.outputs.POM_VERSION }}"

    - name: Verify Is SNAPSHOT Version
      if: ${{ !contains(steps.get_current_version.outputs.POM_VERSION, '-SNAPSHOT')}}
      shell: bash
      run: |
        echo "ERROR: Version is set to incompatible version ${{steps.get_current_version.outputs.POM_VERSION}}. Only SNAPSHOT development versions can be converted to a release version."
        exit 1

    - name: Split version code
      uses: xom9ikk/split@v1.1
      id: splitCurrentVersion
      with:
        string: ${{steps.get_current_version.outputs.POM_VERSION}}
        separator: '-'
        limit: -1

    - name: Split version code - Separate By .
      uses: xom9ikk/split@v1.1
      id: splitVersionMinor
      with:
        string: ${{steps.splitCurrentVersion.outputs._0}}
        separator: .
        limit: -1

    - name: Increment Snapshot Version
      id: nextSnapshotVersion
      shell: bash
      run: |
        SnapshotVersion="${{steps.splitVersionMinor.outputs._0}}.$((${{steps.splitVersionMinor.outputs._1}} + 1)).${{steps.splitVersionMinor.outputs._2}}-SNAPSHOT"
        echo "::set-output name=SnapshotVersion::$SnapshotVersion"

    - name: Print Information
      shell: bash
      run: |
        echo "Release Version -- ${{steps.splitCurrentVersion.outputs._0}}"
        echo "Snapshot Version -- ${{steps.nextSnapshotVersion.outputs.SnapshotVersion}}"
          
    - name: Print Versions
      shell: bash
      run: |
        echo "Release Version: ${{steps.splitCurrentVersion.outputs._0}}"
        echo "Next Snapshot Versin: ${{steps.nextSnapshotVersion.outputs.SnapshotVersion}}"
        echo "RELEASE ENV -- $RELEASE_VERSION"

    - name: Set Release Version
      shell: bash
      run: |
          ./mvnw \
          --batch-mode \
          versions:set \
          -DnewVersion=${{steps.splitCurrentVersion.outputs._0}} \
          -DgenerateBackupPoms=false

    - name: Build Release Version
      shell: bash
      run: |
           ./mvnw clean install \
                --batch-mode \
                -e \
                -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                -PcodeQuality,release-enforcement

    - name: Create tag
      shell: bash
      run: |
           git remote set-url origin https://git:${{inputs.ikmdevops_pat}}@github.com/${{github.repository}}.git
           git pull -p
           git add .
           git config user.name "ikmdevops"
           git config user.email ${{inputs.ikmdevops_email}}
           git commit -m 'Release ${{steps.splitCurrentVersion.outputs._0}}'
           git tag -a ${{steps.splitCurrentVersion.outputs._0}} -m '${{steps.splitCurrentVersion.outputs._0}}' --force

    - name: Set Dev Version
      shell: bash
      run: |
          ./mvnw -B versions:set \
          -DnewVersion=${{steps.nextSnapshotVersion.outputs.SnapshotVersion}} \
          -DgenerateBackupPoms=false \
          --batch-mode

    - name: Commit & Push
      shell: bash
      run: |
           git add .
           git commit -m 'Set next dev version to ${{steps.nextSnapshotVersion.outputs.SnapshotVersion}}'
           git push origin HEAD:main
           git push --tags origin

    - name: Create Release
      shell: bash
      id: create_release
      run: |
          curl -L \
           -X POST \
           -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{inputs.github_token}}" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
           https://api.github.com/repos/${{github.repository}}/releases \
          -d '{"tag_name":"${{steps.splitCurrentVersion.outputs._0}}","name":"Release ${{steps.splitCurrentVersion.outputs._0}}","body":"Release ${{steps.splitCurrentVersion.outputs._0}}","draft":false,"prerelease":false,"generate_release_notes":false}'

    - name: Maven Build
      shell: bash
      run: |
        ./mvnw clean install \
          --batch-mode \
          -e \
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
          -PcodeQuality

    - name: Publish To OSSRH (Maven Central Staging)
      shell: bash
      run: |
          ./mvnw deploy \
              --batch-mode \
              -e \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DskipTests \
              -DskipITs \
              -Dmaven.main.skip \
              -Dmaven.test.skip \
              -DrepositoryId=ossrh \
              -DrepositoryIdOSSRH='true' \
              -PstageOSSRH
      env:
        MAVEN_USERNAME: ${{ inputs.ossrh_username }}
        MAVEN_CENTRAL_TOKEN: ${{ inputs.ossrh_token }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg_passphrase }}

